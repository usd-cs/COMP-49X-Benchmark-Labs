import pytest
from data import Data

# arbitray data to be used by the init method, doesn't affect other methods
latitude = 37.7749 
longitude = -122.4194
start_date = "20231002"  
end_date = "20231008"    

data_obj = Data(latitude, longitude, start_date, end_date)

def test_check_consecutive_temp():
    data_false = {
    '2023100200': 54.00,
    '2023100201': 54.00,
    '2023100202': 54.00,
    '2023100203': 54.00,
    '2023100204': 54.00,
    '2023100205': 54.00,
    '2023100206': 54.00,
    '2023100207': 54.00,
    '2023100208': 54.00,
    '2023100209': 54.00,
    '2023100210': 54.00,
    '2023100211': 54.00,
    '2023100212': 54.00,
    '2023100213': 54.00,
    '2023100214': 54.00,
    '2023100215': 54.00,
    '2023100216': 54.00,
    '2023100217': 54.00,
    '2023100218': 54.00,
    '2023100219': 54.00,
    '2023100220': 54.00,
    '2023100221': 54.00,
    '2023100222': 54.00,
    '2023100223': 54.00
    }

    data_true = {
    '2023100200': 74.00,
    '2023100201': 74.00,
    '2023100202': 74.00,
    '2023100203': 74.00,
    '2023100204': 74.00,
    '2023100205': 74.00,
    '2023100206': 54.00,
    '2023100207': 54.00,
    '2023100208': 54.00,
    '2023100209': 54.00,
    '2023100210': 54.00,
    '2023100211': 54.00,
    '2023100212': 54.00,
    '2023100213': 54.00,
    '2023100214': 54.00,
    '2023100215': 54.00,
    '2023100216': 54.00,
    '2023100217': 54.00,
    '2023100218': 54.00,
    '2023100219': 54.00,
    '2023100220': 54.00,
    '2023100221': 54.00,
    '2023100222': 54.00,
    '2023100223': 54.00
    }

    assert data_obj.check_consecutive_temp(data_false, 20231002) == False
    assert data_obj.check_consecutive_temp(data_true, 20231002) == True

def test_get_start_day():
    data = {
    # 20231002
    '2023100200': 54.00, '2023100201': 74.00, '2023100202': 74.00, '2023100203': 74.00,
    '2023100204': 74.00, '2023100205': 74.00, '2023100206': 54.00, '2023100207': 54.00,
    '2023100208': 54.00, '2023100209': 54.00, '2023100210': 54.00, '2023100211': 54.00,
    '2023100212': 54.00, '2023100213': 54.00, '2023100214': 54.00, '2023100215': 54.00,
    '2023100216': 54.00, '2023100217': 54.00, '2023100218': 54.00, '2023100219': 54.00,
    '2023100220': 54.00, '2023100221': 54.00, '2023100222': 54.00, '2023100223': 54.00,

    # 20231003
    '2023100300': 74.00, '2023100301': 74.00, '2023100302': 74.00, '2023100303': 74.00,
    '2023100304': 74.00, '2023100305': 74.00, '2023100306': 54.00, '2023100307': 54.00,
    '2023100308': 54.00, '2023100309': 54.00, '2023100310': 54.00, '2023100311': 54.00,
    '2023100312': 54.00, '2023100313': 54.00, '2023100314': 54.00, '2023100315': 54.00,
    '2023100316': 54.00, '2023100317': 54.00, '2023100318': 54.00, '2023100319': 54.00,
    '2023100320': 54.00, '2023100321': 54.00, '2023100322': 54.00, '2023100323': 54.00,

    # 20231004
    '2023100400': 74.00, '2023100401': 74.00, '2023100402': 74.00, '2023100403': 74.00,
    '2023100404': 74.00, '2023100405': 74.00, '2023100406': 54.00, '2023100407': 54.00,
    '2023100408': 54.00, '2023100409': 54.00, '2023100410': 54.00, '2023100411': 54.00,
    '2023100412': 54.00, '2023100413': 54.00, '2023100414': 54.00, '2023100415': 54.00,
    '2023100416': 54.00, '2023100417': 54.00, '2023100418': 54.00, '2023100419': 54.00,
    '2023100420': 54.00, '2023100421': 54.00, '2023100422': 54.00, '2023100423': 54.00,

    # 20231005
    '2023100500': 74.00, '2023100501': 74.00, '2023100502': 74.00, '2023100503': 74.00,
    '2023100504': 74.00, '2023100505': 74.00, '2023100506': 54.00, '2023100507': 54.00,
    '2023100508': 54.00, '2023100509': 54.00, '2023100510': 54.00, '2023100511': 54.00,
    '2023100512': 54.00, '2023100513': 54.00, '2023100514': 54.00, '2023100515': 54.00,
    '2023100516': 54.00, '2023100517': 54.00, '2023100518': 54.00, '2023100519': 54.00,
    '2023100520': 54.00, '2023100521': 54.00, '2023100522': 54.00, '2023100523': 54.00,

    # 20231006
    '2023100600': 74.00, '2023100601': 74.00, '2023100602': 74.00, '2023100603': 74.00,
    '2023100604': 74.00, '2023100605': 74.00, '2023100606': 54.00, '2023100607': 54.00,
    '2023100608': 54.00, '2023100609': 54.00, '2023100610': 54.00, '2023100611': 54.00,
    '2023100612': 54.00, '2023100613': 54.00, '2023100614': 54.00, '2023100615': 54.00,
    '2023100616': 54.00, '2023100617': 54.00, '2023100618': 54.00, '2023100619': 54.00,
    '2023100620': 54.00, '2023100621': 54.00, '2023100622': 54.00, '2023100623': 54.00
    }

    assert data_obj.get_start_day(data, 20231002, 20231006) == 20231003
    assert data_obj.get_start_day(data, 20231002, 20231003) == -1
    assert data_obj.get_start_day(data, 20231004, 20231006) == 20231004

def test_check_single_temp():
    data = {
    # 20231002
    '2023100200': 74.00, '2023100201': 74.00, '2023100202': 74.00, '2023100203': 74.00,
    '2023100204': 74.00, '2023100205': 74.00, '2023100206': 74.00, '2023100207': 74.00,
    '2023100208': 74.00, '2023100209': 74.00, '2023100210': 74.00, '2023100211': 74.00,
    '2023100212': 74.00, '2023100213': 74.00, '2023100214': 74.00, '2023100215': 74.00,
    '2023100216': 74.00, '2023100217': 74.00, '2023100218': 74.00, '2023100219': 74.00,
    '2023100220': 74.00, '2023100221': 74.00, '2023100222': 74.00, '2023100223': 74.00,

    # 20231003
    '2023100300': 74.00, '2023100301': 74.00, '2023100302': 74.00, '2023100303': 74.00,
    '2023100304': 74.00, '2023100305': 74.00, '2023100306': 74.00, '2023100307': 74.00,
    '2023100308': 74.00, '2023100309': 54.00, '2023100310': 74.00, '2023100311': 74.00,
    '2023100312': 74.00, '2023100313': 74.00, '2023100314': 74.00, '2023100315': 74.00,
    '2023100316': 74.00, '2023100317': 74.00, '2023100318': 74.00, '2023100319': 74.00,
    '2023100320': 74.00, '2023100321': 74.00, '2023100322': 74.00, '2023100323': 74.00,

    # 20231004
    '2023100400': 74.00, '2023100401': 74.00, '2023100402': 74.00, '2023100403': 74.00,
    '2023100404': 74.00, '2023100405': 74.00, '2023100406': 74.00, '2023100407': 74.00,
    '2023100408': 74.00, '2023100409': 74.00, '2023100410': 74.00, '2023100411': 74.00,
    '2023100412': 74.00, '2023100413': 94.00, '2023100414': 74.00, '2023100415': 74.00,
    '2023100416': 74.00, '2023100417': 74.00, '2023100418': 74.00, '2023100419': 74.00,
    '2023100420': 74.00, '2023100421': 74.00, '2023100422': 74.00, '2023100423': 74.00,
    }
    
    assert data_obj.check_single_temp(data, 20231002) == False
    assert data_obj.check_single_temp(data, 20231003) == True
    assert data_obj.check_single_temp(data, 20231004) == True

def test_check_high_temp():
    data = {
    # 20231002
    '2023100200': 74.00, '2023100201': 74.00, '2023100202': 74.00, '2023100203': 74.00,
    '2023100204': 74.00, '2023100205': 74.00, '2023100206': 74.00, '2023100207': 74.00,
    '2023100208': 74.00, '2023100209': 74.00, '2023100210': 74.00, '2023100211': 74.00,
    '2023100212': 74.00, '2023100213': 74.00, '2023100214': 74.00, '2023100215': 74.00,
    '2023100216': 74.00, '2023100217': 74.00, '2023100218': 74.00, '2023100219': 74.00,
    '2023100220': 74.00, '2023100221': 74.00, '2023100222': 74.00, '2023100223': 74.00,

    # 20231003
    '2023100300': 74.00, '2023100301': 74.00, '2023100302': 74.00, '2023100303': 74.00,
    '2023100304': 74.00, '2023100305': 74.00, '2023100306': 74.00, '2023100307': 74.00,
    '2023100308': 74.00, '2023100309': 105.00, '2023100310': 74.00, '2023100311': 74.00,
    '2023100312': 74.00, '2023100313': 74.00, '2023100314': 74.00, '2023100315': 74.00,
    '2023100316': 74.00, '2023100317': 74.00, '2023100318': 74.00, '2023100319': 74.00,
    '2023100320': 74.00, '2023100321': 74.00, '2023100322': 74.00, '2023100323': 74.00,
    }
    
    assert data_obj.check_high_temp(data, 20231002) == False
    assert data_obj.check_high_temp(data, 20231003) == True